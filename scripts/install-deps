#!/bin/bash
# Installs required dependencies for building SecureDrop Worsktation packages.
# Assumes a Debian 10 machine, ideally a Qubes AppVM.

# If running in CI, we need to add the Ubuntu Bionic repo to download dh-virtualenv
#if [[ -v CIRCLE_BUILD_URL ]]; then
#  echo "deb http://archive.ubuntu.com/ubuntu/ bionic universe" | sudo tee -a /etc/apt/sources.list
#fi

sudo apt-get update
sudo apt-get install  \
    build-essential \
    curl \
    devscripts \
    dh-make \
    dh-python \
    dh-virtualenv \
    git-lfs \
    libffi-dev \
    libssl-dev \
    libyaml-dev \
    python3-all \
    python3-pip \
    python3-venv \
    python3-setuptools \
    reprotest \
    desktop-file-utils -y

# Inspect the wheel files present locally. If repo was cloned
# without git-lfs, they'll be "text/plain", rather than "application/zip".
wheel_mime_types="$(find localwheels/ -type f -iname '*.whl' -exec file --mime-type {} + | perl -F':\s+' -lanE 'say $F[-1]' | sort -u)"
if [[ "$wheel_mime_types" != "application/zip" ]]; then
    echo "Re-fetching git-lfs assets..."
    git lfs install
    # Re-fetch assets to resolve pointers to actual files
    rm -r bootstrap/ localwheels/
    git checkout bootstrap/ localwheels/
    git lfs fetch
fi

# Support existing activated virtualenv, e.g. via virtualenvwrapper.
if [[ -z "$VIRTUAL_ENV" ]]; then
    echo "Creating local virtualenv..."
    python3 -m venv .venv
    . .venv/bin/activate
else
    echo "Virtualenv already activated, skipping creation..."
fi

# Install the 'build' tool from previously prepared localwheels
pip install --require-hashes --no-index --no-deps --no-cache-dir -r build-requirements.txt --find-links ./bootstrap/
