#!/bin/bash
# Wrapper to verify that the checksums file, used to track the integrity
# of the assets in the PyPI mirror, has a valid signature.
#
# We expect a valid signature to correspond to a SecureDrop Maintainer,
# so we create a temporary keyring in order to force gpg to use *only*
# authorized keys during the verification check.
set -e
set -u
set -o pipefail
set -o nounset


bootstrap=${BOOTSTRAP:-}

# Canonicalize path, since script may be called from different
# locations within the repo.
repo_root="$(git rev-parse --show-toplevel)"

if [ ! -z "$bootstrap" ]; then
	sha256sums_sig="${repo_root}/bootstrap-sha256sums-${bootstrap}.txt.asc";
	sha256sums_file="${repo_root}/bootstrap-sha256sums-${bootstrap}.txt";
	localwheels="${repo_root}/bootstrap-${bootstrap}"
else
	sha256sums_sig="${repo_root}/sha256sums.txt.asc";
	sha256sums_file="${repo_root}/sha256sums.txt";
	localwheels="${repo_root}/localwheels"
fi

function verify_sha256sum_signature() {
    # Hardcode expected filepaths

    # Create temporary keyring for use in import and verify actions.
    temp_keyring="$(mktemp)"

    # Ensure temporary keyring is cleaned up afterward.
    trap 'rm -f "${temp_keyring}"' EXIT

    # Import SecureDrop release key for verification.
    gpg --batch --no-default-keyring --keyring "${temp_keyring}" \
        --import "${repo_root}/pubkeys/"*.pub

    # Validate signature.
    gpg --batch --no-default-keyring --keyring "${temp_keyring}" \
        --verify "${sha256sums_sig}" "${sha256sums_file}"
}

function verify_sha256sum_no_changes() {
    # Create a temporary file to store the checksums as gathered from the mirror.
    # We'll compare this to the signed file for validation.
    temp_sha256sum="$(mktemp)"
    if [[ ! -d "$localwheels" ]]; then
        echo "$localwheels directory does not exist; run make fetch-wheels"
        exit 1
    fi
    cd $localwheels
    sha256sum * > "$temp_sha256sum"
    diff <(sort "$sha256sums_file") <(sort "$temp_sha256sum")
}

verify_sha256sum_signature
printf 'Checking that SHA256SUMs from mirror match signed file... '
verify_sha256sum_no_changes
printf ' OK\n'

# Exit with aplomb.
exit 0
